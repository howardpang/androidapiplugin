apply plugin: 'maven-publish'
apply plugin: 'signing'


def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getSnapshotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
            : "https://oss.sonatype.org/content/repositories/snapshots/"
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

group = GROUP

task pluginJar(type: Jar, dependsOn: build) {
    //classifier = 'sources'
    File libs = new File(buildDir, 'libs')
    println "pluginJar for small gradle plugin from ${libs}"


    from(libs)
}

task pluginJar2(type: Jar, dependsOn: build) {
    //classifier = 'sources'
    File libs = new File(buildDir, 'libs')
    println "pluginJar2 for small gradle plugin from ${libs}"


    from(libs)
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId 'gradle-small'
            artifact pluginJar
        }
    }
}

publishing {
    repositories {
        maven {
            credentials {
                username = getRepositoryUsername()
                password = getRepositoryPassword()
            }

            if (isReleaseBuild()) {
                url getReleaseRepositoryUrl()
            } else {
                url getSnapshotRepositoryUrl()
            }
        }
    }
}

